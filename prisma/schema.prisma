// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enums
enum CommissionType {
  PERCENTAGE
  FLAT
}

enum StoreType {
  RESTAURANT
  SHOP
  GROCERY
}

enum RestaurantStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  DEAL_CLOSED
}

enum StoreCategoryMappingStatus {
  ACTIVE
  INACTIVE
}

// store/restaurant model
model Store {
  //basic infos
  id                      String           @id @default(uuid())
  businessOwnerId         String
  storeName               String
  phoneNumber             String           @unique
  email                   String           @unique
  hubName                 String
  storeType               StoreType
  minOrderAmount          Int
  operatingHourStart      String
  operatingHourEnd        String
  keywords                String
  cuisines                String
  bannerImageUrl          String
  restaurantMouUrl        String?
  restaurantMouExpiryDate DateTime?
  status                  RestaurantStatus @default(INACTIVE)
  openForOrder            Boolean          @default(false)

  // commission, vat, penalty
  commissionType                   CommissionType
  commissionAmount                 Float
  isVatIncluded                    Boolean        @default(false)
  preparationTimePenaltyPercentage Float
  failedOrderPercentage            Float

  // Address
  address   String
  area      String
  longitude String
  latitude  String
  city      String
  postcode  String?

  // meta 
  metaTitle       String?
  metaTags        String?
  metaDescription String?

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation with mapping table
  StoreCategoryMapping StoreCategoryMapping[]
}

// store category table
model StoreCategory {
  id           String    @id @default(uuid())
  categoryName String    @unique
  storeType    StoreType

  //relation with mapping table
  StoreCategoryMapping StoreCategoryMapping[]
}

// store category mapping table
model StoreCategoryMapping {
  id         String                     @id @default(uuid())
  store      Store                      @relation(fields: [storeId], references: [id])
  storeId    String
  category   StoreCategory              @relation(fields: [categoryId], references: [id])
  categoryId String
  status     StoreCategoryMappingStatus @default(ACTIVE)

  @@unique([storeId, categoryId]) // same store with same category can not be duplicate
}
